#!/usr/bin/env zsh

set -e

source ~/.bin/utils.zsh
source ~/.config/.variables
source ~/.config/.local-variables

if is_wayland; then
    extension="ppm"
else

fi

file_location_left=/tmp/lockscreen_left.$extension
file_location_center=/tmp/lockscreen_center.$extension
file_location_right=/tmp/lockscreen_right.$extension

if is_wayland; then
    outputs=$(swaymsg -t get_outputs)
    monitor_left=$(get-output-name "$MONITOR_LEFT" "$outputs")
    monitor_center=$(get-output-name "$MONITOR_CENTER" "$outputs")
    monitor_right=$(get-output-name "$MONITOR_RIGHT" "$outputs")

    parallel --link -X "grim -t $extension -o {1} - | convert - -encoding $extension -scale 10% -scale 1000% {2}" ::: $monitor_left $monitor_center $monitor_right ::: $file_location_left $file_location_center $file_location_right
else

fi

spotify_status=`spotifycl status`
spotifycl pause &

is_muted=`pamixer --get-mute || true`
if [[ "$is_muted" == "false" ]]; then
    echo "Muting"
    pamixer --mute &
fi

# Pause notifications
if command -v mako &> /dev/null; then
    killall -USR1 mako || echo "Could not pause Mako."
else
    killall -USR1 dunst || echo "Could not pause Dunst."
fi


if [[ $# -eq 1 ]] ; then
    sudo systemctl $1
fi

# Lock
if is_wayland; then
    swaylock \
        --image "$monitor_left:$file_location_left" \
        --image "$monitor_center:$file_location_center" \
        --image "$monitor_right:$file_location_right" \
        --font="Roboto Regular"
else
fi

# Resume notifications
if command -v mako &> /dev/null; then
    killall -USR2 mako || echo "Could not resume Mako."
else
    killall -USR2 dunst || echo "Could not resume Dunst."
fi

if [[ "$spotify_status" == "playing" ]]; then
    spotifycl play &
fi

if [[ "$is_muted" == "false" ]]; then
    echo "Unmuting"
    pamixer --unmute &
fi

parallel --link rm {} ::: $file_location_left $file_location_center $file_location_right
