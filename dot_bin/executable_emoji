#!/usr/bin/env bash
#
#   Use rofi to pick emoji because that's what this
#   century is about apparently...
#
#   Requirements:
#     rofi, curl, python
#     X11: xsel, xdotool
#     Wayland: wl-clipboard, ydotool
#
#   Usage:
#     1. Download all emoji
#        $ rofi-emoji --download
#
#     2. Run it!
#        $ rofi-emoji
#
#   Notes:
#     * You'll need a emoji font like "Noto Emoji" or "EmojiOne".
#     * Confirming an item will automatically paste it WITHOUT
#       writing it to your clipboard.
#     * Ctrl+C will copy it to your clipboard WITHOUT pasting it.
#
# Source: https://gist.github.com/omc8db/d95462784bc1c5c41f7f489df5dbc377
# "Forked" fromhttps://gist.github.com/Tadly/0741821d3694deaec1ee454a95c591fa
#
# Changed to work with Wayland and made it escape HTML entities using Python.

# shellcheck source=./utils.zsh
source ~/.bin/utils.zsh

# Where to save the emojis file.
EMOJI_FILE="$HOME/.cache/emojis.txt"

function notify() {
    if [ "$(command -v notify-send)" ]; then
        notify-send "$1" "$2"
    fi
}

function download() {
    notify "$(basename "$0")" 'Downloading all emoji for your pleasure'

    curl https://unicode.org/emoji/charts/full-emoji-list.html |
        grep -Po "class='(chars|name)'>\K[^<]+" |
        paste - - |
        python -c 'import html, sys; print(html.unescape(sys.stdin.read()))' |
        tee "$EMOJI_FILE"

    notify "$(basename "$0")" "We're all set!"
}

# shellcheck disable=SC2120
function display() {
    emoji=$(grep -v '#' "$EMOJI_FILE" | grep -v '^[[:blank:]]*$')
    line=$(echo "$emoji" | rofi -dmenu -i -p emoji "$@") #-kb-custom-1 Ctrl+c $@)
    exit_code=$?

    IFS=$'\t' read -r -a line_parts <<<"$line"
    emoji_char="${line_parts[0]}"

    if [ $exit_code == 0 ]; then
        # sleep 0.25 # Delay pasting so the text-entry can come active

        if is_wayland; then
            # for now cannot do ctrl+c
            # ydotool type "$emoji_char"

            echo -n "$emoji_char" | wl-copy
        else
            xdotool type --clearmodifiers "$emoji_char"
        fi
    elif [ $exit_code == 10 ]; then
        if is_wayland; then
            echo -n "$emoji_char" | wl-copy
        else
            # echo -n "$emoji_char" | xclip -selection clipboard
            echo -n "$emoji_char" | xsel -i -b
        fi
    fi
}

# Some simple argparsing
if [[ "$1" =~ -D|--download ]]; then
    download
    exit 0
elif [[ "$1" =~ -h|--help ]]; then
    echo "usage: $0 [-D|--download]"
    exit 0
fi

# Download all emoji if they don't exist yet
if [ ! -f "$EMOJI_FILE" ]; then
    download
fi

display
